- To reset a forgotten/lost root password, reboot into grub options, boot into runlevel 1 and use passwd commmand.

- When resetting the root password on a system running SELinux: If you’re not using SELinux, you could reboot at this point and everything would be fine, however by default CentOS/RHEL 7 use SELinux in enforcing mode, so we need to fix the context of the /etc/shadow file. This is because when the ‘passwd’ command is run, it creates a new /etc/shadow file. As SELinux is not running in this mode the file is created with no SELinux contexts, which can cause problems when we reboot. Create the /.autorelabel command using ‘touch’.

- Installed httpd/Apache on VM01, but unable to reach it on port 80. Ping and SSH works fine.
Checked httpd config and fixed some issues but still did not work. Ran tcpdump on VM01 and found packets were reaching the server but was responding back with "unreachable - admin prohibited filter".
Clearly a firewall issue and first removed two libvirtd rejection rules on the libvirt host. Did not resolve issue so checked SELinux on VM01 and found it was enabled. 
Set to permissive, did not resolve. Set to disabled, still did not resolve.
Checked /var/logs and stumbled upon firewalld log, and whilst it was empty it led me to checking if the firewalld service was enabled which it was.
After stopping and disabling the service connectivity worked.

- Configured httpd ACL with the following:
    <Directory "/web/html">
        Require all granted
        order deny,allow
        deny from all
        allow from host 192.168.25.1
    </Directory>

- After applying the above httpd settings the web server still responded with 403 forbidden. Using the
same configuration for /var/www/html worked fine. Checking /var/log/httpd/error_log revealed: access to /index.html denied (filesystem path '/web/html/index.html') because search permissions are missing on a component of the path. It turns out this is due do SELinux contexts not being set. Performing the following command to set the correct context resolved the issues: chcon -R -t httpd_sys_content_t /web/. The correct context was found by running: ls -Z /var/www

- Changed password expiration with: for i in {Bob,Tim,Ben}; do usermod -e 2020-10-22 $i; done 
- Checked expiration dates with: chage -l username
- Installed NFS client and daemon on both client and server with: yum install nfs-utils
- Configured /etc/export with: /nfs    192.168.25.0/24(rw,sync,no_root_squash)
- Connected from client with: mount -t nfs 192.168.25.16:/nfs /mnt/floki/
- Setting the limits was done by:
    @engineers      soft    nproc           8
    @engineers      hard    nproc           10
    eric            -       nproc           unlimited
- Identified which files chronyd was writing to and wrote to file with: lsof -p 17878 +fg | grep RW | tail -n 1 > ~/service_files.txt
- View shell options: set -o
- Turn on noclobber: set -o noclobber
- Turn off noclobber: set +o noclobber

REGEX, GREP, SED etc
- Regex line start with: ^
- Regex line ending with: $
- Regex case insensitive: i or I
- Grep for two different words in the same line in a file: grep -E 'session opened.*eric' secure
- Grep for two different words in any order, in the same line in a file: grep -E 'trap.*dont|dont.*trap' grep_test
- Grep for line starting with a certain word: grep -iE '^dont' grep_test
- Grep for pattern and only print the names of files pattern: grep -lsi 'ssh' *
- Find and copy files to certain directory: find . -name 'service*' -type f -exec cp {} \/tmp \;
- Find files that are greater than 1MB in size: find /etc/ -type f -size +1M
- Find files with setuid bit set: find /usr -perm /4000
- Find files with sgid bit set: find /usr -perm /2000
- Compress using append option: tar rvf compressed_stuff.tar /root/files/*
- Print shared library dependencies: ldd /usr/bin/bash
- CPU activity with sar: sar
- Memory activity with sar: sar -r
- CPU and IO stats: iostat
- More processor stats: mpstat
- Virtual memory stats: vmstat
- Stats on particular process: pidstat -p 11733
- Show process memory map: pmap -p 11733
- Show current working directory for process: pwdx 11733
- Show process tree (-a include cmd line args): pstree -a
- Show login stats: last
- Show last bad logins: lastb
- Show boot log: journalctl -b
- Show journalctl errors: journalctl -p err
- List SELinux file contexts: ls -Z
- List SELinux process contexts: ps -eZ
- List interface stats: ifstat

RPM:
- Find which RPM files come from: rpm -qf /usr/bin/bash
- List files in a package: rpm -ql bash
- List config files: rpm -qc bash
- List man documents: rpm -qd bash

YUM:
- Show installed packages: yum list installed
- Show what is provided: yum provides python2
- Show the dependency list: yum deplist python2

SYSTEMD:
- List targets: systemctl list-units --type=target --all
- Get default target: systemctl get-default
- Change default target: systemctl set-default

BOOT LOADER:
- Make changes in /etc/default/grub
- Commit changes to grub2-mkconfig
- Config is stored in /boot/grub2/grub.cfg

CRON / Scheduling jobs:
cat /etc/crontab

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed

OR
cat /etc/anacrontab

- Use 'at' to schedule one-off job: at
at> echo "Hello there"
at> Ctrl-D


IPTABLES:
- Add a new rule rejecting port 80 for single host: iptables -I INPUT 1 -p tcp --dport 80 -s 192.168.25.20 -j REJECT
- Delete a rule based on line number: iptables -D  INPUT 1

FIREWALLD:
- Add access to port: firewall-cmd --permanent --add-port=80/tcp
- Remove access to port: firewall-cmd --permanent --remove-port=80/tcp
- Get zones: firewall-cmd --get-zones
- List all rules: firewall-cmd --list-all
- Add rule to allow single IP to port 80:
    firewall-cmd --permanent --zone=public --add-rich-rule='
    rule family="ipv4"
    source address="192.168.25.20/32"
    port protocol="tcp" port="80" accept'
- To enable logging add '--debug'to /etc/sysconfig/firewalld
- Reload is required after each change: firewall-cmd --reload

USER ENV:
- Default useradd settings are stored in /etc/default/useradd
- Skeleton home director stored at /etc/skel

PAM:
- Deny user(s) based on pam.d configuration:
    - Edit /etc/pam.d/sshd
    - Add: auth       required     pam_listfile.so onerr=succeed item=user sense=deny file=/etc/ssh/deniedusers
    - Create file /etc/ssh/deniedusers and username line by line

CHRONY:
- Force chrony update: chronyc makestep

NetworkManager:
- Change DNS: nmcli con mod ens3 ipv4.dns "192.168.25.19"

DNS SERVER:
- Install bind: yum install bind bind-utils
- Check configuration: named-checkconf /etc/named.conf
- Basic config:
    listen-on port 53 { 127.0.0.1; 192.168.25.0/24;};
    allow-query     { localhost; 192.168.25.0/24;};
    allow-query-cache     { localhost; 192.168.25.0/24;};

POSTFIX:
- Set source domain: postconf -e myorigin='floki.home.lab'
- Configure interfaces: postconf -e inet_interfaces="192.168.25.20, localhost"
- Configure destinations: postconf -e mydestination="$myhostname, localhost.$mydomain, localhost"
- Configure allowed nets: postconf -e mynetworks="127.0.0.1/32 192.168.25.20/24 [::1]/128"
- Email aliases are configured in /etc/aliases
- The aliases DB must be refreshed after modifying the file: postalias /etc/aliases
- Check the configuration is OK: postfix check
- Send test mail: echo "Test mail 2" | sendmail -s "Test mail 2" postmaster@floki.home.lab
- Mail stored in /var/spool/mail

SQUID PROXY:
- To modify ACL, edit /etc/squid/squid.conf and add, for example, the following:
    acl localnet src 10.0.0.0/8
    acl Safe_ports port 80

DOVECOTE IMAP:
- Edit /etc/dovecot/dovecot.conf and set the protocols: protocols = imap pop3
- Edit /etc/dovecot/conf.d/10-mail.conf and set the mailbox and namespace:
    mail_location = mbox:~/mail:INBOX=/var/mail/%u
    mail_privileged_group = mail
- ssl_cert and ssl_key lines should be filled and uncommented in /etc/dovecot/conf.d/10-ssl.conf

MARIADB:
- Install with yum install mariadb mariadb-server
- Perform initial configuration with: mysql_secure_installation
- Main database server config stored in: /etc/my.cnf.d/mariadb-server.cnf
- Default port is 3306
- If changing the port, SELinux needs to be updated, for example: semanage port -a -t mysqld_port_t -p tcp 29391
- Login to database server using mysql -u root -p
- List allowed users: SELECT User, Host FROM mysql.user WHERE Host <> 'localhost';
- Grant access from remote client: grant all privileges on *.* to 'root'@'192.168.25.12' identified by 'ragnar' with grant option;
- Create database: CREATE DATABASE testdb;

DOCKER:
- Install dependencies: yum install -y yum-utils device-mapper-persistent-data lvm2
- Add repo: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
- Install containerd.io dependency: yum install containerd
- Install docker: yum install docker-ce --nobest
- Docker dir: /var/lib/docker
- Print info on docker server: docker info
- Search for containers: docker search ubuntu
- Run a container: docker run ubuntu
- Start an interactive tty session: docker run -it ubuntu
- List containers: docker ps -a
- Start and attach to container: docker start -a <id>
- Attach to container: docker attach <id>
- Shutdown container: docker kill ubuntu
- Delete container: docker rm ubuntu
- Autostart container: docker run --restart <always/unless-stopped>

KVM:
- Install packages: yum install qemu-kvm virt-install libvirt libguestfs-tools
- Query which OS' can be run on the KVM host: osinfo-query os
- List of example virt-install commands in the manpage: man virt-install
- List snapshots: virsh snapshot-list <domain>
- Take snapshot of VM: virsh snapshot-create-as --domain <domain> --name <name> --description <desc>
- View info on snapshot: virsh snapshot-info --domain <domain> --current

STORAGE:
- Create physical volume: pvcreate /dev/sdd
- Create volume group: vgcreate my_vg /dev/sdd
- Create logical volume: lvcreate -L 100M my_vg
- Create an LVM2 RAID 1 array:
    - vgcreate raidVG /dev/sdb /dev/sdc
    - lvcreate --type raid1 -m1 -L 1G -n raidLV1 raidVG
- Create FS: mkfs.xfs /dev/mapper/raidVG-raidLV1
- Mount: mount /dev/mapper/raidVG-raidLV1 /mnt
- List all block devices, mounted and unmounted: blkid -o list
- Default mount options can be changed in /etc/mke2fs.conf under default_mntopts
- To enable ACL on a FS, add the option 'acl' to the mount point in /etc/fstab
- Remount using: mount -o remount /dev/mapper/acl_vg-lvol0
- Two types of ACL's: access ACLs are (which are applied to a file or directory), and default (optional) ACLs, which can only be applied to a directory.
- Retrieve ACL information: getfacl /var/lib/testfile
- Modify ACL to give RW to user 'alf': setfacl -m u:alf:rw /var/lib/testfile 
- Set default ACL on directory: setfacl -m d:o:r /var/lib
- To remove a specific ACL, use the -x flag instead of -m
- To remove all ACL in a directory, use -b: setfacl -b /var/lib
- To enable quota on a FS, edit /etc/fstab and add options: grpjquota=aquota.group,usrjquota=aquota.user,jqfmt=vfsv1
- For the following error: "You just mounted an file system that supports labels which does not
contain labels, onto an SELinux box."
    - Fix with: restorecon -R /acl_test
- Create the quota index: quotacheck -cgum /acl_test
- To enable quotas: quotaon -v /acl_test
- To disable quotas: quotaoff -v /acl_test
- Modify quota for user: edquota -u alf
- Modify quota for group: edquota -g devs
- Modify quota grace period: edquota -t
- View quota report: repquota -a
- View quota stats: quotastats
- Refresh NFS exports: exportfs -ra
- Modify /etc/auto.master with: /mnt    /etc/auto.share
- Create /etc/auto.share with: testdir1         192.168.25.10:/nfs/dir1
- Create swap partition: mkswap /dev/sdd
- Enable swap: swapon /dev/sdd
- List swap: swapon -s
